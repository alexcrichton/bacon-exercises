export type Files = [string, Uint8Array][];
export type Maps = [string, string][];
export interface GenerateOptions {
  name: string,
  noTypescript?: boolean,
  instantiation?: boolean,
  map?: Maps,
  compat?: boolean,
  noNodejsCompat?: boolean,
  base64Cutoff?: number,
  tlaCompat?: boolean,
  validLiftingOptimization?: boolean,
}
export type Wit = WitSource | WitBinary | WitPath;
export interface WitSource {
  tag: 'source',
  val: string,
}
export interface WitBinary {
  tag: 'binary',
  val: Uint8Array,
}
export interface WitPath {
  tag: 'path',
  val: string,
}
export interface TypeGenerationOptions {
  wit: Wit,
  world?: string,
  tlaCompat?: boolean,
  instantiation?: boolean,
  map?: Maps,
}
/**
* # Variants
* 
* ## `"function"`
* 
* ## `"instance"`
*/
export type ExportType = 'function' | 'instance';
export interface Transpiled {
  files: Files,
  imports: string[],
  exports: [string, ExportType][],
}
import { WasiCliEnvironment1 } from './imports/wasi-cli-environment';
import { WasiCliExit1 } from './imports/wasi-cli-exit';
import { WasiCliStderr1 } from './imports/wasi-cli-stderr';
import { WasiCliStdin1 } from './imports/wasi-cli-stdin';
import { WasiCliStdout1 } from './imports/wasi-cli-stdout';
import { WasiCliTerminalInput1 } from './imports/wasi-cli-terminal-input';
import { WasiCliTerminalOutput1 } from './imports/wasi-cli-terminal-output';
import { WasiCliTerminalStderr1 } from './imports/wasi-cli-terminal-stderr';
import { WasiCliTerminalStdin1 } from './imports/wasi-cli-terminal-stdin';
import { WasiCliTerminalStdout1 } from './imports/wasi-cli-terminal-stdout';
import { WasiClocksWallClock1 } from './imports/wasi-clocks-wall-clock';
import { WasiFilesystemPreopens1 } from './imports/wasi-filesystem-preopens';
import { WasiFilesystemTypes1 } from './imports/wasi-filesystem-types';
import { WasiIoStreams1 } from './imports/wasi-io-streams';
import { WasiRandomRandom1 } from './imports/wasi-random-random';
export function generate(component: Uint8Array | ArrayBuffer, options: GenerateOptions): Transpiled;
export function generateTypes(name: string, options: TypeGenerationOptions): Files;

export const $init: Promise<void>;
